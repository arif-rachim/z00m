{"version":3,"sources":["AppContext.js","comp/LoginScreen.js","comp/MobileScreen.js","comp/HomeScreen.js","App.js","serviceWorker.js","index.js","comp/MobileScreen.module.css"],"names":["AppContext","React","createContext","TOKEN","DEFAULT_STATE","identity","room","token","activeRoom","videos","reducer","state","action","type","video","disconnect","filter","v","id","AppContextProvider","children","useReducer","dispatch","a","axios","atob","result","data","handleRemoteParticipant","participant","sid","addTrack","track","kind","el","attach","setAttribute","elAudio","document","body","appendChild","tracks","forEach","publication","isSubscribed","on","detach","remove","createLocalTracks","audio","facingMode","localTrack","find","connect","name","catch","error","console","message","participants","window","addEventListener","Provider","value","getRoomToken","startVideo","connectToRoom","leaveRoom","setTimeout","location","reload","style","position","width","height","STROOMER","Alert","props","elevation","variant","LoginScreen","useContext","useState","requestToLogin","setRequestToLogin","phoneNo","setPhoneNo","setIdentity","openSnackbar","setOpenSnackBar","errorMessage","setErrorMessage","isLoading","setIsLoadig","handleClose","showError","event","preventDefault","phone","target","elements","phoneNumber","length","phoneDigit","substring","JSON","parse","indexOf","alignItems","justifyContent","display","background","border","flexDirection","boxShadow","onClick","version","viewBox","d","stroke","fill","fillRule","textAlign","fontSize","marginBottom","onSubmit","onLogin","backgroundColor","padding","margin","maxWidth","TextField","label","paddingLeft","disabled","onChange","toUpperCase","color","bottom","left","fontWeight","placeholder","marginTop","marginRight","Button","CircularProgress","size","Snackbar","open","autoHideDuration","onClose","severity","screen","fillContentInViewPort","content","viewPort","viewPortWidth","offsetWidth","viewPortHeight","offsetHeight","contentWidth","videoWidth","contentHeight","videoHeight","scaleX","scaleY","scale","Math","max","newContentWidth","newContentHeight","top","VideoElement","isLandscapeMode","boxPerRow","viewPortRef","useRef","toFixed","useEffect","onplay","current","ref","className","classes","viewport","updateAllViewports","querySelectorAll","div","firstChild","MobileScreen","controllerRef","screenRef","updateDisplay","onResize","updateMobileScreenViewPorts","lastTouchEnd","now","Date","getTime","removeEventListener","screenStyle","boxSizing","flexWrap","ratio","numberOfBoxes","boxesPerRow","key","toString","calculateBoxPerRow","map","HomeScreen","Fab","right","borderRadius","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.30d1aa6f.chunk.js","sourcesContent":["import React, {useReducer} from \"react\";\nimport * as axios from \"axios\";\nimport {connect, createLocalTracks} from 'twilio-video';\n\nexport const AppContext = React.createContext({});\n\nconst TOKEN = 'aHR0cHM6Ly9kZXNlcnQtY2hpaHVhaHVhLTIxNjMudHdpbC5pby9jcmVhdGUtejAwbS10b2tlbg==';\n\nconst DEFAULT_STATE = {\n    identity: false,\n    room: false,\n    token: false,\n    activeRoom: false,\n    videos: []\n};\n\n/**\n * Reducer contains the logic of this application. Reducer accepts two parameters.\n * The first parameter is state, and the second is action.\n * The state is the n-1 state object, while the action is the event triggered by the producer.\n * @param state\n * @param action\n */\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'join' :\n            return {\n                ...state,\n                token: action.token,\n                room: action.room,\n                identity: action.identity,\n            };\n        case 'set-active-room' :\n            return {\n                ...state,\n                activeRoom: action.activeRoom,\n                videos: [...state.videos, action.video]\n            };\n        case 'disconnect':{\n            state.activeRoom && state.activeRoom.disconnect();\n            return DEFAULT_STATE;\n        }\n        case 'video-add' :\n            return {\n                ...state,\n                videos: [...state.videos, action.video]\n            };\n        case 'video-remove' : {\n            return {\n                ...state,\n                videos : state.videos.filter(v => v.id !== action.id)\n            }\n        }\n        default :\n            return state;\n    }\n}\n\n\n/**\n * AppContextProvider contains an object that will be rendered as a React component.\n * AppContextProvider will delegate under its context value.\n * The context value of AppContextProvider is currently the state and dispatch function.\n */\nexport default function AppContextProvider({children}) {\n    const [state, dispatch] = useReducer(reducer, DEFAULT_STATE);\n\n    async function getRoomToken({identity, room}) {\n\n        const result = await axios.post(atob(TOKEN), {\n            identity,\n            room: room\n        });\n\n        dispatch({type: 'join', token: result.data, identity, room});\n    }\n\n    function handleRemoteParticipant(participant) {\n        const id = participant.sid;\n        const addTrack = track => {\n            if(track.kind === 'video'){\n                const el = track.attach();\n                el.id = id;\n                el.setAttribute('data-identity',participant.identity);\n                dispatch({type:'video-add',video:el})\n            }\n            if(track.kind === 'audio'){\n                const elAudio = track.attach();\n                elAudio.setAttribute('data-id',id);\n                elAudio.setAttribute('style','position:absolute;top:0px;left:0px');\n                document.body.appendChild(elAudio);\n            }\n        };\n\n        participant.tracks.forEach(publication => {\n            if (publication.isSubscribed) {\n                addTrack(publication.track);\n            }\n        });\n\n        // If new tracks get added later, add those, too.\n        participant.on('trackSubscribed', addTrack);\n\n        // When tracks are no longer available, remove the elements displaying them.\n        participant.on('trackUnsubscribed', track => {\n            // Get a list of elements from detach and remove them from the DOM.\n            track.detach().forEach(el => el.remove());\n            dispatch({type:'video-remove',id:id});\n        });\n    }\n\n\n    async function connectToRoom() {\n        if (!state.token) {\n            return;\n        }\n\n        const tracks = await createLocalTracks({\n            audio: true,\n            video: {facingMode: 'user'}\n        });\n\n        const localTrack = tracks.find(track => track.kind === 'video');\n        const activeRoom = await connect(state.token, {\n            name: state.room,\n            tracks\n        }).catch(error => {\n            console.error('Unable to join room', error.message);\n        });\n\n\n        activeRoom.participants.forEach(handleRemoteParticipant);\n        activeRoom.on('participantConnected', handleRemoteParticipant);\n\n        // Listen to the \"beforeunload\" event on window to leave the Room\n        // when the tab/browser is being closed.\n        window.addEventListener('beforeunload', () => activeRoom.disconnect());\n\n        // iOS Safari does not emit the \"beforeunload\" event on window.\n        // Use \"pagehide\" instead.\n        window.addEventListener('pagehide', () => activeRoom.disconnect());\n        const video = localTrack.attach();\n        video.id = 'my-self';\n        dispatch({type: 'set-active-room', activeRoom,video});\n\n    }\n\n    const startVideo = () => connectToRoom();\n    const leaveRoom = () => {\n        dispatch({type: 'disconnect'});\n        setTimeout(() => window.location.reload(true),1000);\n\n    };\n\n    return <AppContext.Provider value={{state, getRoomToken, startVideo, leaveRoom}}>\n        <div style={{position: 'relative', width: '100%', height: '100%'}}>\n            {children(state)}\n        </div>\n    </AppContext.Provider>\n}\n","import React, {useContext, useState} from 'react';\nimport {AppContext} from \"../AppContext\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst STROOMER = 'WyIxNzE2MDU1MCIsIjg4ODg0NTIwIiwiOTg1NzMzNzUiLCI4MDA4NDcwOSIsIjE0MDAyNTgyIiwiOTY0NjQ3NDkiLCIwNzc0MzQwMCIsIjExOTQ4NzkyIiwiMTEzMzAyNjgiLCIyNDYwMzU4NCIsIjMwMTkwNzY5IiwiMTE0NjUyMTkiLCI4NDM2Nzk1NSIsIjU4NDI1MzczIiwiMTAzNjk4NzIiLCIwNzg3MjQxMiIsIjgzODI4NTUyIiwiMjEyMzI2NzIiLCIxNjk3NzkwOSIsIjI5ODE3OTk5IiwiNTgwMDUzMTMiLCIxMDY1NzIyNyIsIjA4MDA5NDAwIiwiMTA1NTcwODIiLCI4NTI1NDQ1NiIsIjcwODA2MTAyIiwiMjEzOTgzODkiLCIxOTE5NjI5OSIsIjE1MTcyNjE5IiwiMTcxMjIyODkiLCIyOTczMjkxMyIsIjcyMjQyMzAwIiwiOTY4MzM0OTgiLCI4MjAzNzIwNCIsIjMzNTk3ODk1IiwiOTU4MDE4ODAiLCI1ODgwNTUwNSIsIjA3ODk2NDM4IiwiODIwOTg4MTYiLCIxMTAwMzMyOSIsIjE0ODY0NDY0IiwiOTgwODQ0MzAiLCI4NTE5Mzk4NyIsIjA3ODIyMjk1IiwiNTk3MDI3MTAiLCI1MDM3NzMxNSIsIjUzMTQyOTQzIiwiMjU0Mzg0NjgiLCIxMDQxNDkxOSIsIjg5Nzc3ODEyIiwiMjgyNzU2OTkiLCI1OTk2NTIyNCIsIjE5MDg5OTM4IiwiMTAzNzU5MzkiLCIyMTY3MTM2NyIsIjg4OTY5NDE0IiwiMDUwMDAwNzQiLCI5MTE2ODgyNiIsIjk4NzE2NDM1IiwiNTE0MjkzODMiLCIzMjA3Nzg3OSIsIjUxMTg4MDgyIiwiMTIyNDg5NTUiLCIwMjg5MDg4MSIsIjE2NTg3NTY1IiwiOTEzNDY2NDYiLCIxMTg3MTgwNiIsIjExNzAwMzYwIiwiMTEyMDI2MjkiLCIxMTEwMDI5MyIsIjI5MzAwNzU2IiwiMjcxMDE5ODIiLCI5MDk4NzI4NSIsIjk0NTc5MDA2IiwiMjEyNzMyOTAiLCIxNjgwOTkwOSIsIjAwMTAwMDA5IiwiOTM2MTQ2NTUiLCI0NjA4NDMxMiIsIjkzNjAzMDc5IiwiODgwODQ4ODgiLCIxMTE2MTQxMCIsIjMyNDEyMzYzIiwiMjk2NTExNDUiLCI4MzA4Mjc3NSIsIjA5MDE4MDc1Il0';\n//const TESTER = 'WyIwMDEwMDAwOSIsIjA5MDE4MDc1Il0';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n/**\n * The login screen is the first page that users will see if they have never logged in.\n * @returns {*}\n * @constructor\n */\nexport default function LoginScreen() {\n    const {getRoomToken} = useContext(AppContext);\n    const [requestToLogin, setRequestToLogin] = useState(false);\n    const [phoneNo, setPhoneNo] = useState('62');\n    const [identity, setIdentity] = useState('');\n    const [openSnackbar, setOpenSnackBar] = React.useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [isLoading, setIsLoadig] = useState(false);\n\n    const handleClose = () => {\n        setOpenSnackBar(false);\n    };\n\n    function showError(message) {\n        setErrorMessage(message);\n        setOpenSnackBar(true);\n    }\n\n    async function onLogin(event) {\n        event.preventDefault();\n        const phone = event.target.elements.phoneNumber.value;\n        const identity = event.target.elements.identity.value;\n        if (identity.length < 4) {\n            showError('Minimal nama panggilan terdiri 4 karakter');\n            return;\n        }\n        if (phone.length < 8) {\n            showError('Nomer yang anda masukkan tidak valid');\n            return;\n        }\n        const phoneDigit = phone.substring(phone.length - 8, phone.length);\n\n        const isValid = JSON.parse(atob(STROOMER)).indexOf(phoneDigit) >= 0;\n        if (!isValid) {\n            showError('Maaf nomer anda tidak terdaftar sebagai anggota Str00m');\n        } else {\n            setIsLoadig(true);\n            await getRoomToken({identity: identity, room: 'z00m'});\n        }\n\n    }\n\n    return <div\n        style={{alignItems: 'center', justifyContent: 'center', display: 'flex', height: '100%', width: '100%'}}>\n        <div>\n            {!requestToLogin &&\n            <div style={{\n                background: 'rgba(0,0,0,0.5)',\n                border: '2px solid rgba(0,0,0,0.1)',\n                height: '20rem',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0px 10px 10px -5px rgba(0,0,0,1)'\n            }} onClick={(event) => setRequestToLogin(true)}>\n                <svg id=\"svg\" version=\"1.1\" viewBox=\"0, 0, 400,486.3157894736842\" height={'100%'}>\n                    <g>\n                        <path\n                            d=\"M175.600 46.479 C 171.783 47.057,168.474 48.385,165.980 50.341 C 164.675 51.363,162.907 52.679,162.049 53.264 C 158.745 55.519,151.600 66.657,151.600 69.551 C 151.600 72.312,154.437 73.752,157.344 72.466 C 159.190 71.649,159.323 71.480,164.142 63.800 C 170.493 53.680,180.835 52.599,193.000 60.783 C 193.880 61.375,196.573 62.904,198.983 64.182 C 201.394 65.459,204.837 67.462,206.634 68.633 C 213.161 72.888,221.693 76.946,227.316 78.470 C 228.902 78.900,230.920 79.446,231.800 79.684 C 234.388 80.384,243.407 80.269,246.200 79.500 C 247.520 79.137,249.507 78.642,250.615 78.401 C 251.723 78.159,253.640 77.295,254.876 76.481 C 256.111 75.666,258.175 74.302,259.461 73.450 C 267.219 68.309,271.495 61.957,269.032 59.235 C 267.392 57.423,263.625 58.229,261.406 60.866 C 260.440 62.013,258.288 63.705,253.607 66.995 C 247.458 71.317,240.577 72.771,231.800 71.603 C 226.062 70.839,211.132 63.344,204.739 58.017 C 202.286 55.974,187.416 47.949,186.152 47.987 C 185.906 47.994,184.646 47.666,183.352 47.258 C 180.237 46.275,178.261 46.076,175.600 46.479 M131.800 114.385 C 91.001 114.648,94.599 114.346,86.630 118.177 C 80.190 121.273,77.201 124.890,74.315 133.077 L 73.073 136.600 72.885 167.436 C 72.656 204.690,72.472 203.330,77.384 200.635 C 78.823 199.846,81.193 198.546,82.652 197.746 L 85.303 196.292 91.552 196.119 C 94.988 196.024,152.520 195.908,219.400 195.862 C 286.280 195.815,341.378 195.633,341.841 195.457 C 344.657 194.387,344.187 189.968,340.434 182.238 C 339.110 179.510,337.680 176.406,337.255 175.339 C 336.831 174.273,335.817 171.870,335.003 170.000 C 334.189 168.130,333.165 165.453,332.728 164.052 C 332.291 162.651,330.778 159.079,329.367 156.115 C 327.955 153.151,326.800 150.658,326.800 150.575 C 326.800 150.282,324.771 145.777,323.839 144.000 C 323.319 143.010,322.758 141.750,322.592 141.200 C 322.426 140.650,321.869 139.277,321.356 138.149 C 320.842 137.022,319.805 134.592,319.052 132.749 C 313.617 119.458,311.969 116.428,309.446 115.084 L 307.800 114.207 237.800 114.180 C 199.300 114.165,151.600 114.257,131.800 114.385 M347.051 225.112 C 346.420 225.195,345.020 225.883,343.940 226.642 C 342.078 227.951,339.608 229.027,334.200 230.886 C 331.127 231.942,324.912 231.963,209.600 231.312 C 72.522 230.538,76.001 230.538,74.559 231.302 C 71.896 232.713,72.070 230.344,71.806 268.755 C 71.543 306.923,71.464 305.433,73.839 306.989 C 74.720 307.566,86.169 307.623,198.704 307.615 L 322.600 307.606 326.200 306.381 C 335.473 303.225,342.985 294.239,343.981 285.109 C 344.191 283.189,344.537 281.291,344.751 280.891 C 344.965 280.491,345.343 277.202,345.591 273.582 C 345.839 269.962,346.196 266.100,346.384 265.000 C 346.573 263.900,346.922 260.660,347.162 257.800 C 347.928 248.647,349.215 235.488,349.627 232.600 C 350.348 227.549,349.403 224.802,347.051 225.112 M73.762 341.242 C 72.846 342.253,72.346 398.617,73.195 405.088 C 74.776 417.131,81.955 424.781,94.400 427.686 C 97.587 428.430,306.598 428.444,309.041 427.700 C 311.279 427.019,312.539 425.742,313.508 423.170 C 313.959 421.977,315.224 419.110,316.320 416.800 C 317.416 414.490,318.875 411.250,319.563 409.600 C 320.251 407.950,321.102 406.060,321.454 405.400 C 321.806 404.740,322.693 402.551,323.427 400.536 C 325.112 395.905,326.419 392.792,328.693 388.000 C 329.684 385.910,330.733 383.570,331.022 382.800 C 332.079 379.992,334.037 375.437,334.365 375.024 C 334.550 374.791,334.834 374.150,334.994 373.600 C 335.155 373.050,336.167 370.593,337.243 368.141 C 338.319 365.689,339.200 363.578,339.200 363.451 C 339.200 363.324,340.122 361.280,341.249 358.910 C 343.675 353.806,344.236 350.471,342.937 348.869 C 341.215 346.744,347.335 346.841,211.995 346.811 C 142.909 346.795,85.995 346.628,85.332 346.438 C 84.295 346.141,78.227 342.645,75.817 340.957 C 74.780 340.230,74.663 340.247,73.762 341.242 \"\n                            stroke=\"none\" fill=\"#fbcc07\" fillRule=\"evenodd\"/>\n                    </g>\n                </svg>\n                <label style={{textAlign: 'center', fontSize: '5rem'}}>z00m</label>\n                <label style={{textAlign: 'center', marginBottom: '1rem', fontSize: '1rem'}}>\n                    Click to Join v1.1\n                </label>\n            </div>\n            }\n            {requestToLogin &&\n            <form action=\"\" onSubmit={(event) => onLogin(event)} style={{\n                display: 'flex',\n                position: 'relative',\n                flexDirection: 'column',\n                backgroundColor: 'rgba(0,0,0,0.5)',\n                padding: '1rem',\n                margin:'1rem',\n                maxWidth : 250,\n                border: '1px solid rgba(0,0,0,0.2)',\n                boxShadow: '0px 20px 10px -10px rgba(0,0,0,0.4)'\n            }}>\n                <TextField label={'Nama Panggilan'}\n                           variant={'standard'}\n                           type=\"text\"\n                           name={'identity'}\n                           style={{\n                               padding: 5,\n                               paddingLeft: 20\n                           }}\n                           disabled={isLoading}\n                           value={identity}\n                           onChange={(event) => {\n                               setIdentity(event.target.value.toUpperCase());\n                           }}\n                />\n                <div style={{position: 'relative'}}>\n                    <label style={{\n                        color: '#FFFFFF',\n                        position: 'absolute',\n                        bottom: 13,\n                        left: '0px',\n                        fontSize: '2rem',\n                        fontWeight: 'bold'\n                    }}>+</label>\n                    <TextField label={'Phone No'}\n                               variant={'standard'}\n                               type=\"text\"\n                               name={'phoneNumber'}\n                               disabled={isLoading}\n                               style={{\n\n                                   padding: 5,\n                                   paddingLeft: 20\n                               }}\n                               value={phoneNo}\n                               onChange={(event) => {\n                                   setPhoneNo(event.target.value);\n                               }}\n                               placeholder={\"62812345678\"}/>\n\n                </div>\n                <div style={{display:'flex',justifyContent:'flex-end',marginTop:'1rem',marginRight:5}}>\n                    <Button variant={'contained'} type={'submit'}\n                            disabled={isLoading}>Login</Button>\n                </div>\n\n                {isLoading &&\n                <CircularProgress size={'5rem'} style={{position: 'absolute', left: 90, bottom: 80,color:'#FBCF14'}}/>\n                }\n            </form>\n            }\n\n        </div>\n        <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\" >\n                {errorMessage}\n            </Alert>\n        </Snackbar>\n    </div>\n}\n","import React, {useEffect, useReducer, useRef} from \"react\";\nimport classes from './MobileScreen.module.css';\nconst DEFAULT_STATE = {\n    screen : {\n        width : 0,\n        height : 0\n    }\n};\n\nconst reducer = (state,action) => {\n    switch (action.type) {\n        case 'screen-size' :\n            return {...state,screen:{width:action.width,height:action.height}}\n        default :\n            return state;\n    }\n};\n\n\nfunction calculateBoxPerRow(numberOfBoxes) {\n    const boxesPerRow = {\n        '1' : 1,\n        '2' : 2,\n        '3' : 3,\n        '4' : 2,\n        '5' : 3,\n        '6' : 3,\n        '7' : 4,\n        '8' : 4,\n        '9' : 3,\n        '10' : 5,\n        '11' : 4,\n        '12' : 4,\n        '13' : 5,\n        '14' : 5,\n        '15' : 5,\n        '16' : 4,\n        '17' : 5,\n        '18' : 5\n    };\n    const key = numberOfBoxes.toString();\n    if(key in boxesPerRow){\n        return boxesPerRow[key];\n    }\n    return 5;\n}\n\nfunction fillContentInViewPort(content, viewPort) {\n    if(content == null || viewPort == null){\n        return;\n    }\n    const {offsetWidth: viewPortWidth, offsetHeight: viewPortHeight} = viewPort;\n    const {videoWidth: contentWidth, videoHeight: contentHeight} = content;\n    if(contentWidth === 0 && contentHeight === 0){\n        return;\n    }\n    const scaleX = viewPortWidth / contentWidth;\n    const scaleY = viewPortHeight / contentHeight;\n    const scale = Math.max(scaleX,scaleY);\n    const newContentWidth = contentWidth * scale;\n    const newContentHeight = contentHeight * scale;\n    const top = (viewPortHeight - newContentHeight)  / 2;\n    const left = (viewPortWidth - newContentWidth) / 2;\n\n    content.setAttribute('style', `\n        width:${newContentWidth}px;\n        height:${newContentHeight}px;\n        top:${top}px;\n        left:${left}px;\n        position:absolute;\n        transition:all 300ms ease-in-out;\n    `);\n}\n\nfunction VideoElement({isLandscapeMode,boxPerRow,video}) {\n    const style = {};\n    const viewPortRef = useRef();\n    style[isLandscapeMode ? 'width' : 'height'] = `${(100 / boxPerRow).toFixed(0)}%`;\n    useEffect(() => {\n        video.onplay = () => {\n            fillContentInViewPort(video,viewPortRef.current);\n        };\n        viewPortRef.current.appendChild(video);\n\n    },[video]);\n    return <div ref={viewPortRef} className={classes.viewport} style={style}/>;\n}\n\nfunction updateAllViewports() {\n    document.querySelectorAll(`.${classes.viewport}`).forEach((div) => {\n        fillContentInViewPort(div.firstChild, div);\n    });\n}\n\nexport default function MobileScreen({videos,controllerRef}){\n    const [state,dispatch] = useReducer(reducer,DEFAULT_STATE);\n    const screenRef = useRef();\n    controllerRef.current = {\n        updateDisplay : updateAllViewports\n    };\n    useEffect(() => {\n        function onResize(event) {\n            const {offsetWidth:width,offsetHeight:height} = screenRef.current;\n            dispatch({type:'screen-size',width,height});\n        }\n        onResize();\n        window.addEventListener(\"resize\", onResize);\n        window.updateMobileScreenViewPorts = () => {\n            updateAllViewports();\n        };\n        // IOS Bug fix\n        document.addEventListener('touchmove', function (event) {\n            if (event.scale !== 1) { event.preventDefault(); }\n        }, false);\n        let lastTouchEnd = 0;\n        document.addEventListener('touchend', function (event) {\n            const now = (new Date()).getTime();\n            if (now - lastTouchEnd <= 300) {\n                event.preventDefault();\n            }\n            lastTouchEnd = now;\n        }, false);\n\n        return () => {\n            window.removeEventListener('resize',onResize);\n        }\n    },[]);\n    const isLandscapeMode = state.screen.width > state.screen.height;\n    const screenStyle = {\n        height:'100%',\n        boxSizing:'border-box',\n        position:'relative',\n        display : 'flex',\n        flexDirection : isLandscapeMode ? 'row' : 'column',\n        flexWrap : 'wrap'\n    };\n    const ratio = state.screen.width / state.screen.height;\n    useEffect(() => {\n        updateAllViewports();\n    },[ratio]);\n    const numberOfBoxes = videos.length;\n    useEffect(() => {\n        updateAllViewports();\n    },[numberOfBoxes]);\n    const boxPerRow = calculateBoxPerRow(numberOfBoxes);\n    return <div ref={screenRef} style={screenStyle}>\n        {videos.map((video) => <VideoElement key={video.id} video={video} isLandscapeMode={isLandscapeMode} boxPerRow={boxPerRow}/>)}\n    </div>\n}\n","/**\n * HomeScreen is a component used to render video playback from users who log into a room.\n * HomeScreen will be mounted by react if the user has successfully logged in.\n */\nimport React, {useContext, useEffect, useRef} from 'react';\nimport {AppContext} from \"../AppContext\";\nimport MobileScreen from \"./MobileScreen\";\nimport CallEndIcon from '@material-ui/icons/CallEnd';\n\nimport Fab from '@material-ui/core/Fab';\n\nexport default function HomeScreen(){\n    const {state,startVideo,leaveRoom} = useContext(AppContext);\n    const videos = state.videos;\n    const controllerRef = useRef();\n    useEffect(() => {\n        if(!state.token){\n            return;\n        }\n        if(!state.activeRoom){\n            startVideo();\n        }\n    },[state,startVideo]);\n    return <div style={{height:'100%',position:'relative'}}>\n            <MobileScreen videos={videos} controllerRef={controllerRef}/>\n            <div style={{position:'absolute',bottom : 40,width:'100%',display:'flex',justifyContent:'center'}}>\n                <Fab color={'secondary'} onClick={() => leaveRoom()}>\n                    <CallEndIcon/>\n                </Fab>\n\n            </div>\n        <div style={{position:'absolute',top:10,right:10,height:100,backgroundColor:'rgba(0,0,0,0.5)',borderRadius:'1rem'}}>\n            <svg id=\"svg\" version=\"1.1\" viewBox=\"0, 0, 400,486.3157894736842\" height={'100%'}>\n                <g>\n                    <path\n                        d=\"M175.600 46.479 C 171.783 47.057,168.474 48.385,165.980 50.341 C 164.675 51.363,162.907 52.679,162.049 53.264 C 158.745 55.519,151.600 66.657,151.600 69.551 C 151.600 72.312,154.437 73.752,157.344 72.466 C 159.190 71.649,159.323 71.480,164.142 63.800 C 170.493 53.680,180.835 52.599,193.000 60.783 C 193.880 61.375,196.573 62.904,198.983 64.182 C 201.394 65.459,204.837 67.462,206.634 68.633 C 213.161 72.888,221.693 76.946,227.316 78.470 C 228.902 78.900,230.920 79.446,231.800 79.684 C 234.388 80.384,243.407 80.269,246.200 79.500 C 247.520 79.137,249.507 78.642,250.615 78.401 C 251.723 78.159,253.640 77.295,254.876 76.481 C 256.111 75.666,258.175 74.302,259.461 73.450 C 267.219 68.309,271.495 61.957,269.032 59.235 C 267.392 57.423,263.625 58.229,261.406 60.866 C 260.440 62.013,258.288 63.705,253.607 66.995 C 247.458 71.317,240.577 72.771,231.800 71.603 C 226.062 70.839,211.132 63.344,204.739 58.017 C 202.286 55.974,187.416 47.949,186.152 47.987 C 185.906 47.994,184.646 47.666,183.352 47.258 C 180.237 46.275,178.261 46.076,175.600 46.479 M131.800 114.385 C 91.001 114.648,94.599 114.346,86.630 118.177 C 80.190 121.273,77.201 124.890,74.315 133.077 L 73.073 136.600 72.885 167.436 C 72.656 204.690,72.472 203.330,77.384 200.635 C 78.823 199.846,81.193 198.546,82.652 197.746 L 85.303 196.292 91.552 196.119 C 94.988 196.024,152.520 195.908,219.400 195.862 C 286.280 195.815,341.378 195.633,341.841 195.457 C 344.657 194.387,344.187 189.968,340.434 182.238 C 339.110 179.510,337.680 176.406,337.255 175.339 C 336.831 174.273,335.817 171.870,335.003 170.000 C 334.189 168.130,333.165 165.453,332.728 164.052 C 332.291 162.651,330.778 159.079,329.367 156.115 C 327.955 153.151,326.800 150.658,326.800 150.575 C 326.800 150.282,324.771 145.777,323.839 144.000 C 323.319 143.010,322.758 141.750,322.592 141.200 C 322.426 140.650,321.869 139.277,321.356 138.149 C 320.842 137.022,319.805 134.592,319.052 132.749 C 313.617 119.458,311.969 116.428,309.446 115.084 L 307.800 114.207 237.800 114.180 C 199.300 114.165,151.600 114.257,131.800 114.385 M347.051 225.112 C 346.420 225.195,345.020 225.883,343.940 226.642 C 342.078 227.951,339.608 229.027,334.200 230.886 C 331.127 231.942,324.912 231.963,209.600 231.312 C 72.522 230.538,76.001 230.538,74.559 231.302 C 71.896 232.713,72.070 230.344,71.806 268.755 C 71.543 306.923,71.464 305.433,73.839 306.989 C 74.720 307.566,86.169 307.623,198.704 307.615 L 322.600 307.606 326.200 306.381 C 335.473 303.225,342.985 294.239,343.981 285.109 C 344.191 283.189,344.537 281.291,344.751 280.891 C 344.965 280.491,345.343 277.202,345.591 273.582 C 345.839 269.962,346.196 266.100,346.384 265.000 C 346.573 263.900,346.922 260.660,347.162 257.800 C 347.928 248.647,349.215 235.488,349.627 232.600 C 350.348 227.549,349.403 224.802,347.051 225.112 M73.762 341.242 C 72.846 342.253,72.346 398.617,73.195 405.088 C 74.776 417.131,81.955 424.781,94.400 427.686 C 97.587 428.430,306.598 428.444,309.041 427.700 C 311.279 427.019,312.539 425.742,313.508 423.170 C 313.959 421.977,315.224 419.110,316.320 416.800 C 317.416 414.490,318.875 411.250,319.563 409.600 C 320.251 407.950,321.102 406.060,321.454 405.400 C 321.806 404.740,322.693 402.551,323.427 400.536 C 325.112 395.905,326.419 392.792,328.693 388.000 C 329.684 385.910,330.733 383.570,331.022 382.800 C 332.079 379.992,334.037 375.437,334.365 375.024 C 334.550 374.791,334.834 374.150,334.994 373.600 C 335.155 373.050,336.167 370.593,337.243 368.141 C 338.319 365.689,339.200 363.578,339.200 363.451 C 339.200 363.324,340.122 361.280,341.249 358.910 C 343.675 353.806,344.236 350.471,342.937 348.869 C 341.215 346.744,347.335 346.841,211.995 346.811 C 142.909 346.795,85.995 346.628,85.332 346.438 C 84.295 346.141,78.227 342.645,75.817 340.957 C 74.780 340.230,74.663 340.247,73.762 341.242 \"\n                        stroke=\"none\" fill=\"#fbcc07\" fillRule=\"evenodd\"/>\n                </g>\n            </svg>\n        </div>\n    </div>\n\n}\n","import React from 'react';\nimport LoginScreen from \"./comp/LoginScreen\";\nimport AppContextProvider from \"./AppContext\";\nimport HomeScreen from \"./comp/HomeScreen\";\n\n/**\n * App is the main component that becomes the root of this application.\n * The App component has an AppContextProvider which will render the HomeScreen or LoginScreen component.\n * @returns {*}\n * @constructor\n */\nfunction App() {\n    return (\n        <AppContextProvider>\n            {(state) => (\n            <div className=\"App\">\n                <div style={{display: 'flex',flexDirection:'column',height:'100%'}}>\n                    {state.token ? <HomeScreen /> : <LoginScreen/>}\n                </div>\n            </div>)}\n        </AppContextProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewport\":\"MobileScreen_viewport__3y_5e\"};"],"sourceRoot":""}